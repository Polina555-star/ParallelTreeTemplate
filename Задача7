#include <iostream>

using namespace std;


int  n;
int i, j;

void addknight();
void writeboard();


int main() {
    setlocale(LC_ALL, "Russian");

    cout << "ВВедите размер шахматной доски" << endl;
    cout << "ВВедите кол-во строк, от 5 до 8" << endl;
    cin >> n;
    cout << "Введите начальное положение коня" << endl;
    cout << "Введите строку" << endl;
    cin >> i;
    cout << "Введите столбец" << endl;
    cin >> j;
    cout << n << "|" << i << "|" << j << endl;
    addknight();

    return 0;

}



int arr[8][8], row[64], col[64];
int ktmov1[8] = { -2, -1, 1, 2, 2, 1, -1, -2 };
int ktmov2[8] = { 1, 2, 2, 1, -1, -2, -2, -1 };

int  move_num, d;
void addknight() {
    register int a, b, e;

    /* пометить клетку как посещенную и запомнить координаты клетки */
    arr[i][j] = 1;
    row[move_num] = i;
    col[move_num] = j;
    move_num++;

    /* проверить 8 возможных перемещений коня */
    for (a = 0; a <= 7; a++) {
        /* если все ходы сделаны, печатаем их */
        if (move_num >=n*n) {
            writeboard();
            exit(0);
        }

        /* определяем колонку и строку для следующего хода */
        b = i + ktmov1[a];
        e = j + ktmov2[a];

        /* проверяем, что после выполенения хода конь остается на шахматной доске */
        if (b < 0 || b > n-1 || e < 0 || e > n-1)
            continue;

        /* проверяем, были ли мы уже в этой клетке */
        if (arr[b][e] == 1)
            continue;
        i = b; j = e;
        addknight();
    }

    /* уменьшить счетчик ходов и попробовать сделать следующий ход */
    move_num--;

    /* освобождаем клетку, ранее занятую конем */
    arr[row[move_num]][col[move_num]] = 0;
    move_num--;  /* пробуем сделать следующий ход */
    i = row[move_num]; j = col[move_num];
    move_num++;
}

void writeboard() {
    int a;

    //clrscr();
    //gotoxy(1, 10);
    //printf("Hit any key for next move ");
    //gotoxy(1, 11);
    //for (a = 0; a <= 6; a++) {
      //  if (a % 8 == 0)
        //    printf("\n");
        //printf("#");
    //}
    for (a = 0; a <=(n*n)-1; a++) {
        //gotoxy(col[a] * 3 + 1, 12 + row[a]);
        printf("%d,%d\n",row[a], col[a] );
        //getch();
    }
}
